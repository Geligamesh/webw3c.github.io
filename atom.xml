<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>破茧</title>
  
  <subtitle>人生重要的不是所站的位置，而是所朝的方向。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pojian.xyz/"/>
  <updated>2019-01-10T05:24:14.516Z</updated>
  <id>https://pojian.xyz/</id>
  
  <author>
    <name>PAN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蝶恋花·庭院深深深几许</title>
    <link href="https://pojian.xyz/2019/01/03/%E8%9D%B6%E6%81%8B%E8%8A%B1%C2%B7%E5%BA%AD%E9%99%A2%E6%B7%B1%E6%B7%B1%E6%B7%B1%E5%87%A0%E8%AE%B8/"/>
    <id>https://pojian.xyz/2019/01/03/蝶恋花·庭院深深深几许/</id>
    <published>2019-01-03T08:40:10.000Z</published>
    <updated>2019-01-10T05:24:14.516Z</updated>
    
    <content type="html"><![CDATA[<p>庭院深深深几许，杨柳堆烟，帘幕无重数。玉勒雕鞍游冶处，楼高不见章台路。<br>雨横风狂三月暮，门掩黄昏，无计留春住。泪眼问花花不语，乱红飞过秋千去。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;庭院深深深几许，杨柳堆烟，帘幕无重数。玉勒雕鞍游冶处，楼高不见章台路。&lt;br&gt;雨横风狂三月暮，门掩黄昏，无计留春住。泪眼问花花不语，乱红飞过秋千去。&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗词" scheme="https://pojian.xyz/categories/%E8%AF%97%E8%AF%8D/"/>
    
    
      <category term="宋词" scheme="https://pojian.xyz/tags/%E5%AE%8B%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github Page搭建个人静态博客</title>
    <link href="https://pojian.xyz/2019/01/03/hello-world/"/>
    <id>https://pojian.xyz/2019/01/03/hello-world/</id>
    <published>2019-01-03T02:43:44.267Z</published>
    <updated>2019-01-14T04:22:53.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实个人不是很喜欢写博客的，因为认真去写一篇博客是比较花时间精力的，最近有点心血来潮想着就搭一个个人博客玩玩，好处是可以记录一些学习知识点和平时项目中遇到的问题和爬过的坑，同时方便和同行朋友一起交流分享学习，其实也是挺好的。</p><p>自己也持续学习，积累更多！</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>博客有第三平台博客，也可以自己搭建，比较早的是博客园、CSDN，近几年新兴的也比较多诸如：WordPress、segmentFault、简书、掘金、知乎专栏、Github Page，当然还有个人建站或者其他的方式等等，不尽了解。</p><p>这次我要说的就是 Github Page + Hexo 搭建个人博客的方式啦！Github Page 是 Github 提供的一种免费的静态网页托管服务（所以想想免费的空间不用也挺浪费的哈哈哈），可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源，这次我们的主角就是 Hexo 啦，具体的内容下面在文章内介绍。</p><p>下面就开始吧~</p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>准备 node 和 git 环境，</p><p>首先，安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">NodeJS</a>，因为 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 是基于 Node.js 驱动的一款博客框架，相比起前面提到过的 Jekyll 框架更快更简洁，因为天*朝网络被墙的原因尝试过安装 Jekyll 失败而放弃了。</p><p>然后，安装 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>，一个分布式版本控制系统，作者是Linux之父，git工具用于项目的版本控制管理。如果 Git 还不熟悉可以参考廖雪峰大神的<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git</a>教程。</p><p>两个工具不同的平台安装方法有所不一样，可自行了解按步骤安装，这里不详述了。</p><p>安装成功后打开dos（Windowns）或者终端（Mac）输入相应命令验证是否成功，如果成功会有相应的版本号。</p><p><img src="https://wx3.sinaimg.cn/large/889d1a94gy1fz2nmvl6kej20g907dwet.jpg" alt="image"></p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>如果以上环境准备好了就可以使用 npm 开始安装 Hexo 了。也可查看 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 的详细文档。</p><p>在命令行（Mac是在终端执行，Windowns是在git bash执行），执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br><span class="line"><span class="built_in">cd</span> myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml <span class="comment"># 网站的配置信息，您可以在此配置大部分的参数。 </span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds <span class="comment"># 模版文件夹</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment"># 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到public文件夹</span></span><br><span class="line">|   ├── _drafts <span class="comment"># 草稿文件</span></span><br><span class="line">|   └── _posts <span class="comment"># 文章Markdowm文件 </span></span><br><span class="line">└── themes  <span class="comment"># 主题文件夹</span></span><br></pre></td></tr></table></figure><p>好了，如果上面的命令都没报错的话，就恭喜了，运行 hexo s 命令，其中s是server的缩写，回车就可以在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 预览效果了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p><img src="https://wx1.sinaimg.cn/large/889d1a94gy1fz2rf4ugb7j20cx02udfv.jpg" alt="image"></p><p>这个是我本地的预览效果，更换过主题的，默认不是这个主题。</p><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2r6obbifj21bo0mfdjx.jpg" alt="image"></p><p>至此，你本地的博客就已经搭建成功，接下来就是部署到 Github Page 了。</p><h2 id="注册-Github"><a href="#注册-Github" class="headerlink" title="注册 Github"></a>注册 Github</h2><p>首先如果你还没有 Github 账号的先<a href="https://github.com" target="_blank" rel="noopener">注册</a>一个，</p><p><img src="https://ws3.sinaimg.cn/large/889d1a94gy1fz2ovhptzgj20n90rk12d.jpg" alt="image"></p><p>点击 Start project 或者下面的 new repository 创建一个新的仓库</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2p5l7j6cj20sk0h8wju.jpg" alt="image"></p><p>注意点来了，Github 仅能使用一个同名仓库的代码托管一个静态站点，这个网上很多教程没说到的。</p><p><img src="https://ws3.sinaimg.cn/large/889d1a94gy1fz2po2plspj20kr0hbtbb.jpg" alt="image"></p><p>然后打开仓库创建一个 index.html 文件，并随意先写点内容，比如 Hello World.</p><p><img src="https://ws2.sinaimg.cn/large/889d1a94gy1fz2q91ar2zj20s80e50va.jpg" alt="image"><br><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2qami35uj20dt06a74t.jpg" alt="image"></p><p>这个时候打开 http://你的用户名.github.io 就可以看到你的站点啦，是不是很简单！index.html 内容只是暂时的预览效果，后面把 Hexo 的文件部署上去就可以在 http://你的用户名.github.io 看到你自己的博客啦！ 比如我的就是 <a href="http://webw3c.github.io" target="_blank" rel="noopener">http://webw3c.github.io</a> 了。</p><p><img src="https://wx4.sinaimg.cn/large/889d1a94gy1fz2pwjzahzj20c0040mx4.jpg" alt="image"></p><h2 id="配置-SSH-key"><a href="#配置-SSH-key" class="headerlink" title="配置 SSH key"></a>配置 SSH key</h2><p>要使用 git 工具首先要配置一下SSH key，为部署本地博客到 Github 做准备。</p><p>打开命令行输入 cd ~/.ssh 如果没报错或者提示什么的说明就是以前生成过的，直接使用 cat ~/.ssh/id_rsa.pub 命令就是可以查看本机上的 SSH key 了。</p><p><img src="https://wx4.sinaimg.cn/large/889d1a94gy1fz2rym90u1j20fr03jgm6.jpg" alt="image"></p><p>如果之前没有创建，则执行以下命令全局配置一下本地账户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"邮箱地址"</span></span><br></pre></td></tr></table></figure><p>然后开始生成密钥 SSH key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">'上面的邮箱'</span></span><br></pre></td></tr></table></figure><p>按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 SSH key</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2s3i3zi0j20iz0anq7a.jpg" alt="image"></p><p>（此图引用自码云）</p><p>首次使用需要确认并添加主机到本机SSH可信列表。若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2s6m2kjwj20fq01g3yg.jpg" alt="image"></p><p>到这还没完，还要登录 <a href="https://github.com" target="_blank" rel="noopener">Github</a> 上添加刚刚生成的SSH key，按以下步骤添加：</p><p><img src="https://ws2.sinaimg.cn/large/889d1a94gy1fz2s9u4bi4j205n0as0t0.jpg" alt="image"></p><p>创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！这样在你的 SSH keys 列表里就会看到你刚刚添加的密钥。</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2sc8liqmj20sb0c9jtg.jpg" alt="image"></p><h2 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h2><p>此时，本地和Github的工作做得差不了，是时候把它们两个连接起来了。你也可以查看官网的<a href="https://hexo.io/zh-cn/docs/deployment" target="_blank" rel="noopener">部署</a>教程。<br>先不着急，部署之前还需要修改和配置两个地方。<br>第一：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2srao2z2j20f104ewey.jpg" alt="image"></p><p>第二：要安装一个部署插件 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>稍等一会，在浏览器访问网址： https://你的用户名.github.io 就会看到你的博客啦！！</p><h2 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h2><p>博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a>官网。<br>新建文章，输入以一命令即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">'文章标题'</span></span><br></pre></td></tr></table></figure></p><p>执行完成后可以在 /source/_posts 下看到一个“文章标题.md”的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。</p><p>在 Markdown 文章里面输入你的文章内容</p><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz5x2qhmzbj216e0c50us.jpg" alt="image"></p><p>再执行一下以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就可以看到你的文章在博客显示了，以下就是刚刚</p><p><img src="https://wx1.sinaimg.cn/large/889d1a94gy1fz5x6potcgj20vk0e10te.jpg" alt="image"></p><p>最后，只要部署到你的 Github 上就可以了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>部署前最好能先执行一下 hexo clean 命令，清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><p>另外，如果你的文章暂时不发布可以先保存在草稿里面。生成草稿的方法和文章差不多 hexo new draft “文章标题”，生成后会在 /source/_drafts 里看到你的草稿文章。当你想发布时只要执行 publish 命令即可发布到博客。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><h2 id="静态图床"><a href="#静态图床" class="headerlink" title="静态图床"></a>静态图床</h2><p>文章里用的一些图片放哪里比较好呢？比对了几个免费的图七牛、sm.ms和微博图床，最后我决定选用微博的，七牛的好像最近是<a href="https://developer.qiniu.com/fusion/kb/1319/test-domain-access-restriction-rules" target="_blank" rel="noopener">测试域名</a>不能用了，虽然有解决方案，但怕以后还会有其他问题，所以放弃啦，毕竟免费的东西才是最贵的，特别像云储存这种东西，感觉都是钱钱钱，哈哈哈，万一有一天不让用就比较麻烦了，另外<a href="https://sm.ms/" target="_blank" rel="noopener">sm.ms</a>这个口碑也不错，好像是个人开发的，免费好几年了，有同样的担心就放弃了，最好抱了新浪的大腿，感觉新浪应该会靠谱一点吧哈哈哈，唯一的问题就是如果有一天新浪禁止外链的话就不行了，再看吧。可以去chrome网上应用商店下载一个叫<a href="https://chrome.google.com/webstore/detail/%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/pinjkilghdfhnkibhcangnpmcpdpmehk?hl=zh-CN" target="_blank" rel="noopener">微博图床</a>的chrome插件，具体使用看说明就可以啦，比较简单，这样图床的问题就解决了。</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>你可以到<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网主题页</a>或者网上找你喜欢的，很多都不错，我使用的是 next 主题，好看实用。你可以根据<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">官网使用文档</a>说明修改相应的配置，达到自己想要的效果。例如设置字体、开启打赏功能、添加评论系统、设置腾讯公益404页面、数据统计、内容分享等等功能。<br>这里我说一下简单说一下我个人添加的评论系统和腾讯公益404页面，添加评论系统是为了大家方便交流，而腾讯公益404页面则为公益稍为尽一点微博的力量，虽然现在几乎没有什么流量哈。</p><p>一、添加评论系统，我添加的是 <a href="https://valine.js.org/" target="_blank" rel="noopener">valine</a> 。<br>打开 /themes/next/_config.yml 文件，搜索 valine，开启 valine，设置 enable 为 true。</p><p><img src="https://ws3.sinaimg.cn/large/889d1a94gy1fz5yqhmvbqj20x009dq5c.jpg" alt="image"></p><p>然后到 leanCloud <a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">登录</a>或者<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">注册</a> 一个账号，注册后登录创建一个应用，然后进入应该到设置里面找到 AppId 和 AppKey 复制粘贴到配置文件里面对应的地方，就是上图中的 appid 和 appkey 这两个地方。</p><p><img src="https://wx3.sinaimg.cn/large/889d1a94gy1fz5ywov61yj20zj0ea777.jpg" alt="image"></p><p>二、配置腾讯公益404页面。</p><ol><li>在博客根目录 /source 文件夹下创建404.html（具体内容见下图及代码）；</li><li>在 html 上方加入上面3行代码；</li></ol><p>腾讯公益用到的js其实有有三个，search_children.js、data.js以及page.js，如果你的站点协议是http的话直接按照 next 文件的方法添加就可以了，但如果是 https 话直接添加是会报错的，因为腾讯公益404页面暂时还不支持 https，所以我直接把 page.js 的内容直接加入到页面是可以成功的，请看下图</p><p><img src="https://wx4.sinaimg.cn/large/889d1a94gy1fz5zivfhysj210n0cpq5c.jpg" alt="image"></p><p>上图最前面的那几行也要加进去哦。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: <span class="literal">false</span></span><br><span class="line">title: <span class="string">"404"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这里放一下上面用到的几个js链接，来自腾讯公益404官方<a href="https://www.qq.com/404/" target="_blank" rel="noopener">接入文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/plain"</span> src=<span class="string">"http://www.qq.com/404/search_children.js"</span> charset=<span class="string">"utf-8"</span> homePageUrl=<span class="string">"https://pojian.xyz"</span> homePageName=<span class="string">"回到我的博客主页"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>你也可以直接复制我 Github 上的<a href="https://github.com/webw3c/webw3c.github.io/blob/master/404.html" target="_blank" rel="noopener">404页面代码</a>，以下是我博客的预览效果。</p><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz5zpo960mj21hb0r5jxt.jpg" alt="image"></p><p>另外如果需要自定义个性化404页面的只要删除相应腾讯的JS，直接修改上面的 404.html 文件就可以了。</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你感觉直接使用 github.io 的域名作为你的博客链接不够专业，不够程序员的话那么就购买一个域名解析绑定到你的博客呢，我也建议你这样做的。<br>阿里云购买、解析绑定</p><h2 id="SEO优化（编译中，请稍后-■■■■■-20-）"><a href="#SEO优化（编译中，请稍后-■■■■■-20-）" class="headerlink" title="SEO优化（编译中，请稍后 ■■■■■ 20%）"></a>SEO优化（编译中，请稍后 ■■■■■ 20%）</h2><p>多仓库同步更新coding<br>安装提交插件<br>百度、google收录<br>根据CDN原理，利用CDN优化github不太靠谱<br>站点统计、监控、站长助手</p><h2 id="多端同步（编译中，请稍后-■■■■■-20-）"><a href="#多端同步（编译中，请稍后-■■■■■-20-）" class="headerlink" title="多端同步（编译中，请稍后 ■■■■■ 20%）"></a>多端同步（编译中，请稍后 ■■■■■ 20%）</h2><p>多电脑同时编写</p><h2 id="手机编写（编译中，请稍后-■■■■■-20-）"><a href="#手机编写（编译中，请稍后-■■■■■-20-）" class="headerlink" title="手机编写（编译中，请稍后 ■■■■■ 20%）"></a>手机编写（编译中，请稍后 ■■■■■ 20%）</h2><p>SSH</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;其实个人不是很喜欢写博客的，因为认真去写一篇博客是比较花时间精力的，最近有点心血来潮想着就搭一个个人博客玩玩，好处是可以记录一些学习知识点
      
    
    </summary>
    
      <category term="Hexo" scheme="https://pojian.xyz/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://pojian.xyz/tags/Hexo/"/>
    
      <category term="Github Page" scheme="https://pojian.xyz/tags/Github-Page/"/>
    
      <category term="SEO" scheme="https://pojian.xyz/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>文章标题</title>
    <link href="https://pojian.xyz/2019/01/03/%E6%96%87%E7%AB%A0%E6%A0%87%E9%A2%98/"/>
    <id>https://pojian.xyz/2019/01/03/文章标题/</id>
    <published>2019-01-03T02:32:20.000Z</published>
    <updated>2019-01-14T02:47:06.893Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><p><a href="https://www.baidu.com" target="_blank" rel="noopener">链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>() &#123;</span><br><span class="line">  console.log(<span class="string">'这是一段很牛逼的代码'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;标题二&quot;&gt;&lt;a href=&quot;#标题二&quot; class=&quot;headerlink&quot; title=&quot;标题二&quot;&gt;&lt;/a&gt;标题二&lt;/h2&gt;&lt;h3 id=&quot;标题三&quot;&gt;&lt;a href=&quot;#标题三&quot; class=&quot;headerlink&quot; title=&quot;标题三&quot;&gt;&lt;/a&gt;标题三&lt;/h
      
    
    </summary>
    
    
  </entry>
  
</feed>
