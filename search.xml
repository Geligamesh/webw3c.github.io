<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蝶恋花·庭院深深深几许</title>
      <link href="/2019/01/03/%E8%9D%B6%E6%81%8B%E8%8A%B1%C2%B7%E5%BA%AD%E9%99%A2%E6%B7%B1%E6%B7%B1%E6%B7%B1%E5%87%A0%E8%AE%B8/"/>
      <url>/2019/01/03/%E8%9D%B6%E6%81%8B%E8%8A%B1%C2%B7%E5%BA%AD%E9%99%A2%E6%B7%B1%E6%B7%B1%E6%B7%B1%E5%87%A0%E8%AE%B8/</url>
      
        <content type="html"><![CDATA[<p>庭院深深深几许，杨柳堆烟，帘幕无重数。玉勒雕鞍游冶处，楼高不见章台路。<br>雨横风狂三月暮，门掩黄昏，无计留春住。泪眼问花花不语，乱红飞过秋千去。</p>]]></content>
      
      
      <categories>
          
          <category> 诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宋词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github Page + Next搭建个人静态博客</title>
      <link href="/2019/01/03/hello-world/"/>
      <url>/2019/01/03/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实个人不是很喜欢写博客的，因为认真去写一篇博客是比较花时间精力的，最近有点心血来潮想着就搭一个个人博客玩玩，好处是可以记录一些学习知识点和平时项目中遇到的问题和爬过的坑，同时方便和同行朋友一起交流分享学习，其实也是挺好的。</p><p>自己也持续学习，积累更多！</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>博客有第三平台博客，也可以自己搭建，比较早的是博客园、CSDN，近几年新兴的也比较多诸如：WordPress、segmentFault、简书、掘金、知乎专栏、Github Page，当然还有个人建站或者其他的方式等等，不尽了解。</p><p>这次我要说的就是 Github Page + Hexo 搭建个人博客的方式啦！Github Page 是 Github 提供的一种免费的静态网页托管服务（所以想想免费的空间不用也挺浪费的哈哈哈），可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源，这次我们的主角就是 Hexo 啦，具体的内容下面在文章内介绍。</p><p>下面就开始吧~</p><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p>首先是准备 node 和 git 环境，</p><p>首先安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">NodeJS</a>，因为 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 是基于 Node.js 驱动的一款博客框架，相比起前面提到过的 Jekyll 框架更快更简洁，因为天*朝被墙的原因尝试过安装 Jekyll 失败而放弃了。</p><p>然后安装 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>，一个分布式版本控制系统，作者是Linux之父，git工具用于项目的版本控制管理。</p><p>不同的平台安装方法有所不一样，可自行了解按步骤安装，这里不详述了。</p><p>安装成功后打开dos（Win）或者iTerm（Mac）输入相应命令验证是否成功，如果成功会有相应的版本号。</p><p><img src="https://wx3.sinaimg.cn/large/889d1a94gy1fz2nmvl6kej20g907dwet.jpg" alt="image"></p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>如果以上环境准备好了就可以使用 npm 开始安装 Hexo 了。也可查看 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 的详细文档。</p><p>在命令行（Mac是在iTerm执行，Win是在git bash执行），执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br><span class="line"><span class="built_in">cd</span> myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml <span class="comment"># 网站的配置信息，您可以在此配置大部分的参数。 </span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds <span class="comment"># 模版文件夹</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment"># 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到public文件夹</span></span><br><span class="line">|   ├── _drafts <span class="comment"># 草稿文件</span></span><br><span class="line">|   └── _posts <span class="comment"># 文章Markdowm文件 </span></span><br><span class="line">└── themes  <span class="comment"># 主题文件夹</span></span><br></pre></td></tr></table></figure><p>好了，如果上面的命令都没报错的话，就恭喜了，运行 hexo s 其中s是server的缩写，回车就可以在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 预览效果了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p><img src="https://wx1.sinaimg.cn/large/889d1a94gy1fz2rf4ugb7j20cx02udfv.jpg" alt="image"></p><p>这个是我本地的预览，更换过主题的，默认不是这个主题。</p><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2r6obbifj21bo0mfdjx.jpg" alt="image"></p><p>至此，你本地的博客就已经搭建成功，接下来就是部署到 Github Page 了。</p><h3 id="注册-Github"><a href="#注册-Github" class="headerlink" title="注册 Github"></a>注册 Github</h3><p>首先还没账号的注册一个 <a href="https://github.com" target="_blank" rel="noopener">Github</a> 账号，</p><p><img src="https://ws3.sinaimg.cn/large/889d1a94gy1fz2ovhptzgj20n90rk12d.jpg" alt="image"></p><p>点击 Start project 或者下面的 new repository 创建一个新的仓库</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2p5l7j6cj20sk0h8wju.jpg" alt="image"></p><p>注意点来了，Github 仅能使用一个同名仓库的代码托管一个静态站点，这个网上很多教程没说到的。</p><p><img src="https://ws3.sinaimg.cn/large/889d1a94gy1fz2po2plspj20kr0hbtbb.jpg" alt="image"></p><p>然后打开仓库创建一个 index.html 文件，并随意先写点内容，比如 Hello World.</p><p><img src="https://ws2.sinaimg.cn/large/889d1a94gy1fz2q91ar2zj20s80e50va.jpg" alt="image"><br><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2qami35uj20dt06a74t.jpg" alt="image"></p><p>这个时候打开 http://你的用户名.github.io 就可以看到你的站点啦，是不是很简单！index.html 内容只是暂时的预览效果，后面把 Hexo 的文件部署上去就可以在 http://你的用户名.github.io 看到你自己的博客啦！ 比如我的就是 <a href="http://webw3c.github.io" target="_blank" rel="noopener">http://webw3c.github.io</a> 了。</p><p><img src="https://wx4.sinaimg.cn/large/889d1a94gy1fz2pwjzahzj20c0040mx4.jpg" alt="image"></p><h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p>要使用 git 工具首先要配置一下SSH key。</p><p>打开命令行输入 cd ~/.ssh 如果没报错或者提示什么的说明就是以前生成过的，直接使用 cat ~/.ssh/id_rsa.pub 命令就是可以查看本机上的 SSH key 了。</p><p><img src="https://wx4.sinaimg.cn/large/889d1a94gy1fz2rym90u1j20fr03jgm6.jpg" alt="image"></p><p>如果之前没有创建，则执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"邮箱地址"</span></span><br></pre></td></tr></table></figure><p>然后开始生成密钥 SSH key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C ‘上面的邮箱’</span><br></pre></td></tr></table></figure><p>按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 SSH key</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2s3i3zi0j20iz0anq7a.jpg" alt="image"></p><p>（此图引用自码云）</p><p>首次使用需要确认并添加主机到本机SSH可信列表。若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/889d1a94gy1fz2s6m2kjwj20fq01g3yg.jpg" alt="image"></p><p>到这还没完，还要登录 <a href="https://github.com" target="_blank" rel="noopener">Github</a> 上添加刚刚生成的SSH key，按以下步骤添加：</p><p><img src="https://ws2.sinaimg.cn/large/889d1a94gy1fz2s9u4bi4j205n0as0t0.jpg" alt="image"></p><p>创建一个新的 SSH key, 标题随便，key 就填刚才生成那个，确认创建，搞定！！</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2sc8liqmj20sb0c9jtg.jpg" alt="image"></p><h3 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h3><p>此时，本地和Github的工作做得差不了，是时候把它们两个连接起来了。你也可以查看官网的<a href="https://hexo.io/zh-cn/docs/deployment" target="_blank" rel="noopener">部署</a>教程。</p><p>部署之前还需要修改一下 _config.yml 中的配置参数。打开文件拉到最后，填上如下配置（也可同时部署到多个仓库，后面再说）：</p><p><img src="https://wx2.sinaimg.cn/large/889d1a94gy1fz2srao2z2j20f104ewey.jpg" alt="image"></p><p>修改完这个配置还要安装一个部署插件 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>最后执行以下命令就可以部署上传啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>稍等一会，在浏览器访问网址： https://&lt;Github账号名称&gt;.github.io 就会看到你的博客啦！！</p><h3 id="开始写作（编译中，请稍后-■■■■■-20-）"><a href="#开始写作（编译中，请稍后-■■■■■-20-）" class="headerlink" title="开始写作（编译中，请稍后 ■■■■■ 20%）"></a>开始写作（编译中，请稍后 ■■■■■ 20%）</h3><p>发布新文章<br>草稿（草稿发布）<br>免费图床对比（七牛、sm.ms、微博图床）</p><h3 id="主题配置（编译中，请稍后-■■■■■-20-）"><a href="#主题配置（编译中，请稍后-■■■■■-20-）" class="headerlink" title="主题配置（编译中，请稍后 ■■■■■ 20%）"></a>主题配置（编译中，请稍后 ■■■■■ 20%）</h3><p>next<br>添加评论系统<br>配置腾讯公益404页面https的坑</p><h3 id="SEO优化（编译中，请稍后-■■■■■-20-）"><a href="#SEO优化（编译中，请稍后-■■■■■-20-）" class="headerlink" title="SEO优化（编译中，请稍后 ■■■■■ 20%）"></a>SEO优化（编译中，请稍后 ■■■■■ 20%）</h3><p>多仓库同步更新coding<br>安装提交插件<br>百度、google收录<br>根据CDN原理，利用CDN优化github不太靠谱<br>站点统计、监控、站长助手</p><h3 id="绑定域名（编译中，请稍后-■■■■■-20-）"><a href="#绑定域名（编译中，请稍后-■■■■■-20-）" class="headerlink" title="绑定域名（编译中，请稍后 ■■■■■ 20%）"></a>绑定域名（编译中，请稍后 ■■■■■ 20%）</h3><p>阿里云购买、解析绑定</p><h3 id="多端同步（编译中，请稍后-■■■■■-20-）"><a href="#多端同步（编译中，请稍后-■■■■■-20-）" class="headerlink" title="多端同步（编译中，请稍后 ■■■■■ 20%）"></a>多端同步（编译中，请稍后 ■■■■■ 20%）</h3><p>多电脑同时编写</p><h3 id="手机编写（编译中，请稍后-■■■■■-20-）"><a href="#手机编写（编译中，请稍后-■■■■■-20-）" class="headerlink" title="手机编写（编译中，请稍后 ■■■■■ 20%）"></a>手机编写（编译中，请稍后 ■■■■■ 20%）</h3><p>SSH</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo[Hexo, Github Page, SEO] </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
